@page "/ChangePassword/{id:int}"

@inject NotificationService notificationService
@inject ISecurity securityManager
@inject NavigationManager navigationManager

<h3>Change Password</h3>

<EditForm Model="changePassword" OnSubmit="HandleSubmit">
    <div class="card dataForm p-3">
        <div class="row">
            <div class="col-md-4">
                <label for="password"> Current Password</label>
                <InputText id="password" @bind-Value="changePassword.CurrentPassword" class="form-control"></InputText>
            </div>
            <div class="col-md-4">
                <label for="password"> New Password</label>
                <InputText id="password" @bind-Value="changePassword.NewPassword" class="form-control"></InputText>
            </div>
            <div class="col-md-4">
                <label for="password"> Confirm Password</label>
                <InputText id="password" @bind-Value="changePassword.ConfirmPassword" class="form-control"></InputText>
            </div>
        </div>
        <br />
        <div>
            <button type="submit" class="btn btn-primary m-2">Update</button>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }

    User user = new User()
    {
    };

    ChangePasswordDTO changePassword = new ChangePasswordDTO()
    {
    };
    string btnText = string.Empty;

    protected override async Task OnParametersSetAsync()
    {
        if (Id != null)
        {
            user = securityManager.GetAppUser((int)Id);
        }
    }

    async Task HandleSubmit()
    {
        if (changePassword.NewPassword == changePassword.ConfirmPassword && changePassword.CurrentPassword != null)
        {
            var updated = securityManager.ChangePassword(user.LoginId, changePassword.CurrentPassword, changePassword.ConfirmPassword);
            if (updated)
            {
                notificationService.SetMessage("Password has been Changed successfully", true);
                navigationManager.NavigateTo("UserList");
            }
        }
        else
        {
            notificationService.SetMessage("New Password and Confirm Password Must be Same", false);
            navigationManager.NavigateTo("UserList");
        }
    }
}