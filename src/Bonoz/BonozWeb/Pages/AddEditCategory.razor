@page "/AddEditCategory"
@page "/AddEditCategory/{id:int}"

@inject ISales salesManager
@inject NavigationManager navigationManager

@if (Id == null)
{
    <h3>Create a new Category</h3>
}
else
{
    <h3>Update Category</h3>
}


<EditForm Model="category" OnSubmit="HandleSubmit">
    <div class="card dataForm p-3">
        <div class="row">
            <div class="col-md-4">
                <label for="name"> Name</label>
                <InputText id="name" @bind-Value="category.Name" class="form-control"></InputText>
            </div>
            <div class="col-md-4">
                <label for="description"> Description</label>
                <InputText id="description" @bind-Value="category.Description" class="form-control"></InputText>
            </div>
        </div>
    </div>

    <br />
    <div>
        <button type="submit" class="btn btn-primary m-2">@btnText</button>
    </div>

</EditForm>


@code {

    [Parameter]
    public int? Id { get; set; }

    Category category = new Category()
    {

    };


    string btnText = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Save" : "Update";
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id == null)
        {

        }
        else
        {
            category = salesManager.GetCategory((int)Id);
        }
    }

    void HandleSubmit()
    {
        if (Id == null)
        {
            salesManager.CreateCategory(category);
            navigationManager.NavigateTo("Categories");
        }
        else
        {
            salesManager.UpdateCategory(category);
            navigationManager.NavigateTo("Categories");
        }

    }

}